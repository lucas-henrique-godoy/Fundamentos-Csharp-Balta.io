								CURSO DE C# BALTA.IO

O C# é uma linguagem fortemente tipada, de alto nível, compilada e gerenciada. É compilada para uma linguagem intermediária chamada IL, depois disso o gerenciador CLR runtime compila a linguagem intermediária para o código de máquina, executa e faz o gerenciamento da aplicação C#. Isso significa que não precisamos alocar memória, não precisamos nos preocupar com segurança da aplicação. É abstraído a questão de acesso a hardware.
O IL é uma linguagem intermediária em que todas as linguagens da Microsoft são compiladas.
 
O CLR (Common Language Runtime) é o ambiente de execução do .NET, responsável por gerenciar a execução de aplicativos .NET, como os escritos em C#. Ele converte o código intermediário (IL) em código de máquina específico da plataforma no momento da execução, gerencia a memória (incluindo coleta de lixo), fornece segurança e tratamento de exceções e facilita a interoperabilidade entre linguagens. Isso permite que o código seja executado em múltiplas plataformas de maneira eficiente e segura, enquanto simplifica o trabalho do desenvolvedor._______________________________________________________________________________________________________________________________________________________________________

IL (Intermediate Language), ou CIL (Common Intermediate Language), é a linguagem intermediária para a qual o código C# é compilado antes de ser executado. Esse código IL é independente de plataforma e arquitetura, permitindo que programas .NET rodem em qualquer sistema com uma implementação do CLR (Common Language Runtime).

O processo funciona assim:

Compilação para IL: O código C# é compilado para IL, não diretamente para código de máquina.
Execução com JIT: Durante a execução, o CLR usa o compilador Just-In-Time (JIT) para transformar o IL em código de máquina específico para a plataforma, garantindo desempenho e portabilidade.
Benefícios: O IL permite interoperabilidade entre linguagens, segurança e otimização de desempenho.
_______________________________________________________________________________________________________________________________________________________________________

FRAMEWORKS: É uma estrutura, um alicerce.
- Um conjunto de bibliotecas.
- Usamos como base para construir nossas aplicações.
- Para não precisar fazer tudo, começar do zero.
- Conceito existente em diversas tecnologias.
- Neste curso veremos o .NET, um framework da Microsoft.
- Ideia é trazer recursos comuns já prontos.
- Itens do dia-a-dia.
- Escrita de arquivo em disco por exemplo.
- Acesso à dados.
- Validados e testados.
- Nos poupam muito tempo.
- Não vale a pena começar sem um.
_______________________________________________________________________________________________________________________________________________________________________

- .NET FRAMEWORK:
- C# é a linguagem.
- O framework se chama .NET.
- Teve sua primeira versão em 2001.
- Chamado de .NET Framework.
- Recebeu as versões 1.0,1.1, 2.0, 3.0, 3.5, 4.x (Atualmente).
- Pode ser instalado Side-by-Side.
- Compatível somente com Windows.
Considerado legado.
_______________________________________________________________________________________________________________________________________________________________________

- .NET CORE:
- Versão moderna do .NET Framework.
- Lançado em meados de 2015.
- Veio para suportar outros SOs como Linux e Mac.
- Suas primeiras versões continham apenas o básico.
- Core significa núcleo ou seja, o essencial.
- Mudar um framework usado por milhões não é fácil.
- Foi totalmente reescrito.
- Ainda assim com ótima retro compatibilidade.
- Versão 3.1 está bem estável.
- Recomendação atual da Microsoft.
- Muitas melhorias de performance.
- Versões 1.0, 1.1, 2.0, 2.1, 3.0, 3.1.
- Instalação Side-by-Side.
_______________________________________________________________________________________________________________________________________________________________________

- .NET STANDART: Garante que tudo que estamos escrevendo irá rodar tanto no .NET Framework(sistema legado) quanto no .NET Core(sistema novo).

-.NET Framework e .NET CORE coexistem.
- Podem ser instalados juntos.
- Podem ser utilizados no mesmo projeto.
- Como garantir que algo que escrevemos roda em ambos?
- .NET Standart não é um framework, apenas um contrato, chamamos de Surface API.
- É a intersecção entre os frameworks.
- Garante que tudo que escrevemos será compatível com ambos os frameworks.
_______________________________________________________________________________________________________________________________________________________________________

- .NET 5 - Futuro:
- Unificação dos Frameworks.
- .NET Core chegou ao .NET Framework em nível de conteúdo.
- Não faz mais sentido ter dois frameworks.
- Atualmente em Preview.
Previsão para lançamento em Nov/2020.




